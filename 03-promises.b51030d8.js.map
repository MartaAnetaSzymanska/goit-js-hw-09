{"mappings":"AAAA,SAASA,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAEpCC,QAAQC,IAAI,uBAAqBL,QAAiBC,OAEhDG,QAAMC,IAAI,sBAAoBL,QAAeC,M,CAInD,IAAIK,EADgBC,SAASC,cAAc,SAG/BC,iBAAiB,UAAUC,IACrC,IAAIT,EAAQS,EAAGC,OAAOC,SAASX,MAAMY,MACjCC,EAAOJ,EAAGC,OAAOC,SAASE,KAAKD,MAC/BE,EAASL,EAAGC,OAAOC,SAASG,OAAOF,MAEvC,IAAK,IAAIb,EAAW,EAAGA,GAAYe,EAAQf,IACzCM,EAAUU,WAAWjB,EAAcC,EAAUC,IAC7CA,GAASa,C","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\nconst promiseForm = document.querySelector('.form');\nlet timerId;\n\npromiseForm.addEventListener('submit', ev => {\n  let delay = ev.target.elements.delay.value;\n  let step = ev.target.elements.step.value;\n  let amount = ev.target.elements.amount.value;\n\n  for (let position = 1; position <= amount; position++) {\n    timerId = setTimeout(createPromise(position, delay));\n    delay += step;\n  }\n});\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Math","random","console","log","$47d4ff9957288465$var$timerId","document","querySelector","addEventListener","ev","target","elements","value","step","amount","setTimeout"],"version":3,"file":"03-promises.b51030d8.js.map"}